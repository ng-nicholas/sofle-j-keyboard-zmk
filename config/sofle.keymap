#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

&mt {
    tapping-term-ms = <230>;
    flavor = "balanced";
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    td_space: td_space {
        compatible = "zmk,behavior-tap-dance";
        label = "mod tap space enter, tap dance into repeat";
        #binding-cells = <0>;
        bindings = <&kp SPACE>, <&kp ENTER>;

        tapping-term-ms = <300>;
    };

    td_pgdn: td_pgdn {
        compatible = "zmk,behavior-tap-dance";
        label = "page down tap dance into page up";
        #binding-cells = <0>;
        bindings = <&kp PAGE_DOWN>, <&kp PAGE_UP>;

        tapping-term-ms = <300>;
    };

    scroll_window_ctrl: scroll_window_ctrl {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&appswitcher_right>, <&appswitcher_left>;

        tap-ms = <30>;
        label = "SCROLL_WINDOW_CTRL";
    };

    td_sqbrkt_close: td_sqbrkt_close {
        compatible = "zmk,behavior-tap-dance";
        label = "backslash td into close square bracket";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&kp BACKSLASH>, <&kp RIGHT_BRACKET>;
    };

    td_sqbrkt_open: td_sqbrkt_open {
        compatible = "zmk,behavior-tap-dance";
        label = "tab td into open square bracket";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&kp TAB>, <&brkt_start>;
    };

    td_esc: td_esc {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_ESC";
        #binding-cells = <0>;
        bindings = <&kp GRAVE>, <&kp ESCAPE>;

        tapping-term-ms = <300>;
    };

    td_win_menu: td_win_menu {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_WIN_MENU";
        #binding-cells = <0>;
        bindings = <&kp LEFT_WIN>, <&kp K_CONTEXT_MENU>;

        tapping-term-ms = <300>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "SCROLL_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

        tap-ms = <40>;
    };

    macros {
        appswitcher_right: appswitcher_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&sk LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "APPSWITCHER_RIGHT";
            wait-ms = <100>;
            tap-ms = <40>;
        };

        appswitcher_left: appswitcher_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB &kp LEFT &kp LEFT>,
                <&macro_tap>,
                <&sk LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "APPSWITCHER_LEFT";
            wait-ms = <100>;
            tap-ms = <40>;
        };

        par_start: par_start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "PAR_START";
        };

        brkt_start: brkt_start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "BRKT_START";
        };

        quote_start: quote_start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SINGLE_QUOTE &kp LEFT>;
            label = "QUOTE_START";
        };

        msc_scroll_left: msc_scroll_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>;
            label = "MSC_SCROLL_LEFT";
        };

        msc_scroll_right: msc_scroll_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>;
            label = "MSC_SCROLL_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&td_esc              &kp N1            &kp N2              &kp N3          &kp N4     &kp N5        &kp UP_ARROW     &kp N6         &kp N7     &kp N8           &kp N9               &kp N0                     &kp EQUAL
&td_sqbrkt_open      &kp Q             &kp W               &kp E           &kp R      &kp T         &kp DOWN         &kp Y          &kp U      &kp I            &kp O                &kp P                      &td_sqbrkt_close
&kp CAPS             &mt LEFT_SHIFT A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &lt 1 F    &kp G         &kp LEFT         &kp H          &lt 1 J    &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &mt RIGHT_SHIFT SEMICOLON  &kp SINGLE_QUOTE
&mt CAPS LEFT_SHIFT  &kp Z             &kp X               &kp C           &lt 2 V    &kp B         &kp RIGHT        &kp N          &lt 2 M    &kp COMMA        &kp DOT              &kp FSLH                   &kp MINUS
&kp PRINTSCREEN      &mo 3             &kp LEFT_CONTROL    &td_win_menu    &td_space  &kp DELETE    &kp PRINTSCREEN  &kp BACKSPACE  &td_space  &kp HOME         &kp END              &td_pgdn
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Default layer";
            label = "Default";
        };

        Keypad {
            bindings = <
&kp F11  &kp F1      &kp F2     &kp F3            &kp F4      &kp F5      &msc SCRL_UP     &kp F6       &kp F7                 &kp F8  &kp F9  &kp F10  &kp F12
&none    &mkp MB5    &mkp LCLK  &mkp MCLK         &mkp RCLK   &mkp MB4    &msc SCRL_DOWN   &none        &none                  &kp N7  &kp N8  &kp N9   &kp EQUAL
&none    &kp ESCAPE  &kp MINUS  &kp EQUAL         &trans      &none       &msc SCRL_LEFT   &none        &trans                 &kp N4  &kp N5  &kp N6   &kp MINUS
&none    &none       &none      &kp SINGLE_QUOTE  &none       &none       &msc SCRL_RIGHT  &none        &none                  &kp N1  &kp N2  &kp N3   &kp FSLH
&trans   &none       &none      &none             &par_start  &kp TAB     &mkp MCLK        &kp LS(TAB)  &kp RIGHT_PARENTHESIS  &none   &kp N0  &kp DOT
            >;

            display-name = "Extra keys";
            sensor-bindings = <&scroll_window_ctrl>;
            label = "Keypad";
        };

        Shortcuts {
            bindings = <
&kp LC(LS(ESCAPE))  &none  &none      &none  &kp LA(F4)  &none                 &none  &none  &none   &none  &none  &none  &none
&none               &none  &none      &none  &none       &none                 &none  &none  &none   &none  &none  &none  &none
&none               &none  &kp LC(S)  &none  &none       &none                 &none  &none  &none   &none  &none  &none  &none
&none               &none  &none      &none  &trans      &none                 &none  &none  &trans  &none  &none  &none  &none
&kp K_MUTE          &none  &none      &none  &none       &kp LA(LC(DELETE))    &none  &none  &none   &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "Shortcuts";
        };

        Hardware {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD
&none  &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none           &none  &none            &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD
&none  &out OUT_USB  &out OUT_BLE    &none         &none         &none           &none  &none            &none            &none            &none            &none            &none
&none  &bootloader   &soft_off       &sys_reset    &none         &none           &none  &none            &none            &sys_reset       &soft_off        &bootloader      &none
&none  &trans        &none           &none         &none         &none           &none  &none            &none            &none            &none            &none
            >;

            label = "Hardware";
        };
    };
};
