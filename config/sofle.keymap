#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hrm_td_a: hrm_td_a {
        compatible = "zmk,behavior-tap-dance";
        label = "HRM_TD_A";
        #binding-cells = <0>;
        bindings = <&mt LEFT_WIN A>, <&kp K_CONTEXT_MENU>;

        tapping-term-ms = <200>;
    };

    hrm_td_semi: hrm_td_semi {
        compatible = "zmk,behavior-tap-dance";
        label = "HRM_TD_SEMI";
        #binding-cells = <0>;
        bindings = <&mt LEFT_WIN SEMICOLON>, <&kp K_CONTEXT_MENU>;

        tapping-term-ms = <200>;
    };

    macros {
        alt_tab_left: alt_tab_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB) &kp LEFT>;
            label = "ALT_TAB_LEFT";
        };

        alt_tab_right: alt_tab_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB) &kp RIGHT>;
            label = "ALT_TAB_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp GRAVE         &kp N1     &kp N2            &kp N3              &kp N4            &kp N5       &kp UP_ARROW     &kp N6     &kp N7             &kp N8               &kp N9           &kp N0        &kp MINUS
&kp LEFT_BRACKET  &kp Q      &kp W             &kp E               &kp R             &kp T        &kp DOWN         &kp Y      &kp U              &kp I                &kp O            &kp P         &kp RIGHT_BRACKET
&kp CAPS          &hrm_td_a  &mt LEFT_ALT S    &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &hrm_td_semi  &kp APOS
&kp LSHFT         &kp Z      &kp X             &kp C               &kp V             &kp B        &kp RIGHT_ARROW  &kp N      &kp M              &kp COMMA            &kp DOT          &kp FSLH      &kp END
&kp K_MUTE        &to 1      &kp LEFT_CONTROL  &kp LEFT_WIN        &kp DELETE        &kp SPACE    &kp PRINTSCREEN  &kp SPACE  &kp ENTER          &kp C_MENU           &kp RIGHT_ALT    &to 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Default layer";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
